openapi: 3.0.1
info:
  title: Test Simple REST-like Resource
  version: "3"
security:
  - Api-Key: []
  - OAuth2: []
paths:
  /v3/search:
    get:
      parameters:
        - description: The search query phrase
          in: query
          name: query
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BoardList"
          description: Success
  /v3/boards:
    get:
      parameters:
        - description: Request results starting at a page number (default is 1).
          in: query
          name: page
          schema:
            default: 1
            description: Request results starting at a page number (default is 1).
            format: int32
            type: integer
        - description: Search for boards the user owns or has been invited to as an editor.
          in: query
          name: board_relationship
          schema:
            $ref: "#/components/schemas/BoardRelationship"
        - description: Sort the list of boards by last update date or name. Defaults to date_last_updated_descending.
          in: query
          name: sort_order
          schema:
            $ref: "#/components/schemas/BoardSortOrder"
        - description: Request number of boards to return in each page. (default is 30).
          in: query
          name: pageSize
          schema:
            default: 30
            description: Request number of boards to return in each page. (default is 30).
            format: int32
            type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BoardList"
          description: Success
        "400":
          description: InvalidParameterValue
        "401":
          description: Unauthorized
      summary: Get all boards that the user participates in
      tags:
        - Boards
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BoardInfo"
        description: Specify a name and description of the board to create (name is required).
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BoardCreated"
          description: Created
        "400":
          description: InvalidParameterValue
        "401":
          description: Unauthorized
      summary: Create a new board
      tags:
        - Boards
  "/v3/boards/{board_id}":
    delete:
      parameters:
        - description: Specify the board to delete.
          in: path
          name: board_id
          required: true
          schema:
            description: Specify the board to delete.
            nullable: true
            type: string
      responses:
        "200":
          description: Success
        "204":
          description: ""
        "400":
          description: InvalidParameterValue
        "401":
          description: Unauthorized
        "403":
          description: InsufficientAccess
        "404":
          description: BoardNotFound
      summary: Delete a board
      tags:
        - Boards
    get:
      parameters:
        - description: Retrieve details for a specific board.
          in: path
          name: board_id
          required: true
          schema:
            description: Retrieve details for a specific board.
            nullable: true
            type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BoardDetail"
          description: Success
        "400":
          description: InvalidParameterValue
        "401":
          description: Unauthorized
        "404":
          description: BoardNotFound
      summary: Get assets and metadata for a specific board
      tags:
        - Boards
    put:
      parameters:
        - description: Specify the board to update.
          in: path
          name: board_id
          required: true
          schema:
            description: Specify the board to update.
            nullable: true
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/BoardInfo"
        description: Specify a new name and description for the board (name is required).
      responses:
        "200":
          description: Success
        "204":
          description: Updated
        "400":
          description: InvalidParameterValue
        "401":
          description: Unauthorized
        "403":
          description: InsufficientAccess
        "404":
          description: BoardNotFound
      summary: Update a board
      tags:
        - Boards
components:
  schemas:
    Asset:
      additionalProperties: false
      properties:
        asset_type:
          nullable: true
          type: string
        date_added:
          format: date-time
          type: string
        display_sizes:
          items:
            $ref: "#/components/schemas/DisplaySize"
          nullable: true
          type: array
        id:
          nullable: true
          type: string
      type: object
    BoardCreated:
      additionalProperties: false
      properties:
        id:
          nullable: true
          type: string
      type: object
    BoardDetail:
      additionalProperties: false
      properties:
        asset_count:
          format: int32
          type: integer
        assets:
          items:
            $ref: "#/components/schemas/Asset"
          nullable: true
          type: array
        comment_count:
          format: int32
          type: integer
        date_created:
          format: date-time
          type: string
        date_last_updated:
          format: date-time
          type: string
        description:
          nullable: true
          type: string
        id:
          nullable: true
          type: string
        links:
          $ref: "#/components/schemas/Links"
        name:
          nullable: true
          type: string
        permissions:
          $ref: "#/components/schemas/BoardPermissions"
      type: object
    BoardInfo:
      additionalProperties: false
      properties:
        description:
          nullable: true
          type: string
        name:
          type: string
      required:
        - name
      type: object
    BoardList:
      additionalProperties: false
      properties:
        board_count:
          format: int32
          type: integer
        boards:
          items:
            $ref: "#/components/schemas/BoardListBoard"
          nullable: true
          type: array
      type: object
    BoardListBoard:
      additionalProperties: false
      properties:
        asset_count:
          format: int32
          type: integer
        board_relationship:
          nullable: true
          type: string
        date_created:
          format: date-time
          type: string
        date_last_updated:
          format: date-time
          type: string
        description:
          nullable: true
          type: string
        hero_asset:
          $ref: "#/components/schemas/Asset"
        id:
          nullable: true
          type: string
        name:
          nullable: true
          type: string
      type: object
    BoardPermissions:
      additionalProperties: false
      properties:
        can_add_assets:
          type: boolean
        can_delete_board:
          type: boolean
        can_invite_to_board:
          type: boolean
        can_remove_assets:
          type: boolean
        can_update_description:
          type: boolean
        can_update_name:
          type: boolean
      type: object
    BoardRelationship:
      enum:
        - owned
        - invited
      type: string
    BoardSortOrder:
      enum:
        - date_last_updated_descending
        - date_last_updated_ascending
        - name_ascending
        - name_decending
      type: string
    DisplaySize:
      additionalProperties: false
      properties:
        name:
          nullable: true
          type: string
        uri:
          nullable: true
          type: string
      type: object
    Links:
      additionalProperties: false
      properties:
        invitation:
          nullable: true
          type: string
        share:
          nullable: true
          type: string
      type: object
